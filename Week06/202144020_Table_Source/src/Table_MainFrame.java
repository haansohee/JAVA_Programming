
import java.util.Collections;
import java.util.Comparator;
import java.util.Vector;
import javax.swing.table.DefaultTableModel;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author hansohee
 */
public class Table_MainFrame extends javax.swing.JFrame {

    /**
     * Creates new form Table_MainFrame
     */
    public Table_MainFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblTitle = new javax.swing.JLabel();
        lblOrder = new javax.swing.JLabel();
        lblMovie = new javax.swing.JLabel();
        lblGallery = new javax.swing.JLabel();
        txtOrder = new javax.swing.JTextField();
        txtMovie = new javax.swing.JTextField();
        txtGallery = new javax.swing.JTextField();
        btnInsert = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        btnSort = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblTitle.setText("Table 예제");

        lblOrder.setText("순      위");

        lblMovie.setText("영화 제목");

        lblGallery.setText("관객 동원");

        btnInsert.setText("Insert");
        btnInsert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInsertActionPerformed(evt);
            }
        });

        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                { new Integer(1), "로마의 휴일",  new Integer(1000000)},
                { new Integer(2), "타이타닉",  new Integer(800000)},
                { new Integer(3), "죽은 시인의 사회",  new Integer(600000)},
                { new Integer(4), "쉬리",  new Integer(400000)},
                {null, null, null}
            },
            new String [] {
                "순위", "영화 제목", "관객 동원"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        btnSort.setText("Sort");
        btnSort.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSortActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblMovie)
                                    .addComponent(lblOrder))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtOrder, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtMovie, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblGallery)
                                .addGap(18, 18, 18)
                                .addComponent(txtGallery, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(35, 35, 35)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(btnInsert)
                                .addComponent(btnUpdate))
                            .addComponent(btnDelete)
                            .addComponent(btnSort)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(200, 200, 200)
                        .addComponent(lblTitle))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(1, 1, 1)))
                .addContainerGap(37, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTitle)
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblOrder)
                    .addComponent(txtOrder, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnInsert))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblMovie)
                    .addComponent(txtMovie, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnUpdate))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblGallery)
                    .addComponent(txtGallery, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDelete))
                .addGap(18, 18, 18)
                .addComponent(btnSort)
                .addGap(29, 29, 29)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(42, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        int iCntRow = 0;
        iCntRow = jTable1.getSelectedRow();  // Return the selected row
        
        txtOrder.setText(jTable1.getValueAt(iCntRow, 0).toString());  // return the rank
        txtMovie.setText(jTable1.getValueAt(iCntRow, 1).toString());  // return the movie title
        txtGallery.setText(jTable1.getValueAt(iCntRow, 2).toString());  // return the number of gallery
    }//GEN-LAST:event_jTable1MouseClicked

    private void btnInsertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInsertActionPerformed
        int iCntRow = 0;
        int iOrder = 0;
        int iGallery = 0;
        
        iCntRow = jTable1.getRowCount();  // 행의 수 반환
        for (int idx = 0; idx < iCntRow; idx++) {
            // Check the values in column 0 of each row
            if (jTable1.getValueAt(idx, 0) == null) {
                iCntRow = idx;
                break;
            }
        }
        
   
        
        // 같은 데이터가 들어가지 않도록 수정!
        for (int idx = 0; idx < iCntRow; idx++)
        {   
            if (jTable1.getValueAt(idx, 1).equals(txtMovie.getText())) {
                System.out.println("이미 등록된 영화!");
                break;
            } else {
                 iOrder = Integer.parseInt(txtOrder.getText());
                 jTable1.setValueAt(iOrder, iCntRow, 0);  // Setting the rank
                 
                 iGallery = Integer.parseInt(txtGallery.getText());
                 
                 jTable1.setValueAt(txtMovie.getText(), iCntRow, 1);   // Setting the movie title
                 jTable1.setValueAt(iGallery, iCntRow, 2);  // Setting the number of gallery
            }
        }
    }//GEN-LAST:event_btnInsertActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        int iCntRow = 0;
        int iOrder = 0;
        int iGallery = 0;
        
        iCntRow = jTable1.getSelectedRow();  // Returns the selected row number
        
        iOrder = Integer.parseInt(txtOrder.getText());
        jTable1.setValueAt(iOrder, iCntRow, 0);
        
        jTable1.setValueAt(txtMovie.getText(), iCntRow, 1);
        
        iGallery = Integer.parseInt(txtGallery.getText());
        jTable1.setValueAt(iGallery, iCntRow, 2);
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        MakeRowData objRowData;
        Vector myVC = new Vector();
        
        int iCntRow = 0;
        iCntRow = jTable1.getSelectedRow();  // Returns the selected row number
        
        DefaultTableModel jTableModel = (DefaultTableModel)jTable1.getModel();
        
        // Step1 : jTable1 -> myVC
        for (int iRow = 0; iRow < jTable1.getRowCount(); iRow++) {
            if (jTable1.getValueAt(iRow, 0) != null) {
                objRowData = new MakeRowData();
                objRowData.strMovie = jTable1.getValueAt(iRow, 1).toString();
                objRowData.iGallery = Integer.parseInt(jTable1.getValueAt(iRow, 2).toString());
                myVC.add(objRowData);
            } else {
                break;
            }
        }
        
        // Step 2 : Remove selected Row
        myVC.removeElementAt(iCntRow);
        jTableModel.removeRow(iCntRow);
        
        // Step 3 : myVC -> jTable1
        for (int idx = 0; idx < myVC.size(); idx++ ) {
            objRowData = (MakeRowData)myVC.get(idx);
            jTable1.setValueAt(idx + 1, idx, 0);
            jTable1.setValueAt(objRowData.strMovie, idx, 1);
            jTable1.setValueAt(objRowData.iGallery, idx, 2);
        }
        
        // Step 4 : Add one dummy row to jTable1
        String[] strRecord = new String[jTable1.getColumnCount()];
        jTableModel.addRow(strRecord);
        
        txtOrder.setText(null);
        txtMovie.setText(null);
        txtGallery.setText(null);  // Initialize txtOrder / txtMovie / txtGallery
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnSortActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSortActionPerformed
        // "관객 동원" 수에 따라 내림차순으로 정렬하도록 구현하기!!
        MakeRowData objRowData;
        Vector myVC = new Vector();
        
        // 1. jTable1 -> myVC
        for (int iRow = 0; iRow < jTable1.getRowCount(); iRow++) {
            if (jTable1.getValueAt(iRow, 0) != null) {
                objRowData = new MakeRowData();
                objRowData.strMovie = jTable1.getValueAt(iRow, 1).toString();
                objRowData.iGallery = Integer.parseInt(jTable1.getValueAt(iRow, 2).toString());
                myVC.add(objRowData);
            } else {
                break;
            }
        }
        
        // 2. Sorting (추가해야 함)
        Collections.sort(myVC, new GalleryDescCompare());
        
        // 3. myVC -> jTable1
        for (int idx = 0; idx < myVC.size(); idx++) {
            objRowData = (MakeRowData)myVC.get(idx);
            jTable1.setValueAt(idx+1, idx, 0);
            jTable1.setValueAt(objRowData.strMovie, idx, 1);
            jTable1.setValueAt(objRowData.iGallery, idx, 2);
        }
        
        // Initialize TextField
        txtOrder.setText(null);
        txtMovie.setText(null);
        txtGallery.setText(null);
    }//GEN-LAST:event_btnSortActionPerformed
    
    public class MakeRowData {
        public String strMovie;
        public int iGallery;
    }
    
    public class GalleryDescCompare implements Comparator {
        public int compare(Object arg0, Object arg1) {
            // Ascending(<) : Descending(>)
            if (((MakeRowData)arg0).iGallery > ((MakeRowData)arg1).iGallery) {
                return -1;
            } else if (((MakeRowData)arg0).iGallery == ((MakeRowData)arg1).iGallery) {
                return Integer.compare(((MakeRowData)arg0).iGallery, ((MakeRowData)arg1).iGallery);
            } else {
                return 1;
            }
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Table_MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Table_MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Table_MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Table_MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Table_MainFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnInsert;
    private javax.swing.JButton btnSort;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel lblGallery;
    private javax.swing.JLabel lblMovie;
    private javax.swing.JLabel lblOrder;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JTextField txtGallery;
    private javax.swing.JTextField txtMovie;
    private javax.swing.JTextField txtOrder;
    // End of variables declaration//GEN-END:variables
}
